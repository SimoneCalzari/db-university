1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
-Soluzione1
SELECT
    `degrees`.`name`,
    `degrees`.`level`,
    `students`.`name`,
    `students`.`surname`
FROM
    `degrees`
INNER JOIN `students` 
ON `degrees`.`id` = `students`.`degree_id`
WHERE
    `degrees`.`name` = "Corso di laurea in economia";


***********************************************************************************************


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
-Soluzione1
SELECT
    `departments`.`name`,
    `degrees`.`name`,
    `degrees`.`level`
FROM
    `departments`
INNER JOIN `degrees` 
ON `departments`.`id` = `degrees`.`department_id`
WHERE
    `departments`.`name` = "Dipartimento di neuroscienze" AND `degrees`.`level` = "magistrale";


***********************************************************************************************


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
-Soluzione1
SELECT
    `courses`.`name`,
    `courses`.`description`,
    `courses`.`cfu`,
    `teachers`.`name`,
    `teachers`.`surname`,
    `teachers`.`email`
FROM
    `courses`
INNER JOIN `course_teacher` 
ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` 
ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE
    `teachers`.`id` = 44;


***********************************************************************************************


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
-Soluzione1
SELECT
    `students`.`surname`,
    `students`.`name`,
    `departments`.`name`,
    `degrees`.*
FROM
    `departments`
INNER JOIN `degrees` 
ON `departments`.`id` = `degrees`.`department_id`
INNER JOIN `students` 
ON `degrees`.`id` = `students`.`degree_id`
ORDER BY
    `students`.`surname`,
    `students`.`name`;


***********************************************************************************************


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
-Soluzione1SELECT
    `degrees`.`name`,
    `courses`.`name`,
    `teachers`.`name`,
    `teachers`.`surname`
FROM
    `degrees`
INNER JOIN `courses` 
ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` 
ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` 
ON `course_teacher`.`teacher_id` = `teachers`.`id`
ORDER BY     `degrees`.`name`;


***********************************************************************************************


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
-Soluzione1
SELECT
    `departments`.`name`,
    `teachers`.*
FROM
    `departments`
INNER JOIN `degrees` 
ON `departments`.`id` = `degrees`.`department_id`
INNER JOIN `courses` 
ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` 
ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` 
ON `course_teacher`.`teacher_id` = `teachers`.`id`
WHERE `departments`.`name` = "dipartimento di matematica"
GROUP BY `teachers`.`id`
ORDER BY
    `teachers`.`name`,
    `teachers`.`surname`;


***********************************************************************************************


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.
-Soluzione senza filtro voto minimo 18
SELECT
    `students`.`name`,
    `students`.`surname`,
    COUNT(`students`.`id`) AS `numero_tentativi`,
     `courses`.`name` AS `nome_esame`,
     MAX(`exam_student`.`vote`) AS `voto_massimo`
FROM
    `students`
INNER JOIN `exam_student` 
ON `students`.`id` = `exam_student`.`student_id`
INNER JOIN `exams` 
ON `exams`.`id` = `exam_student`.`exam_id`
INNER JOIN `courses` 
ON `courses`.`id` = `exams`.`course_id`
GROUP BY
    `students`.`id`,
    `courses`.`id`;


-Soluzione con filtro per esami con votazione sufficiente
SELECT
    `students`.`name`,
    `students`.`surname`,
    COUNT(`students`.`id`) AS `numero_tentativi_sufficienti`,
    `courses`.`name` AS `nome_esame`,
    MAX(`exam_student`.`vote`) AS `voto_massimo`
FROM
    `students`
INNER JOIN `exam_student` 
ON `students`.`id` = `exam_student`.`student_id`
INNER JOIN `exams` 
ON `exams`.`id` = `exam_student`.`exam_id`
INNER JOIN `courses` 
ON `courses`.`id` = `exams`.`course_id`
WHERE
    `exam_student`.`vote` >= 18
GROUP BY
    `students`.`id`,
    `courses`.`id`;